데이터를 저장하는 방법
  1) 변수 : 한가지 타입에 한가지 값만 저장
  
  2) 배열 : 한가지 타입에 여러개의 값을 저장
               데이터조작에 불편하다(삽입, 삭제, 수정,검색) 
               배열은 사이즈가 변경될수 없다!!

-자료구조!!!
 : 데이터를 저장하는 구조
 : import java.util.* ; 제공한다.
 : Collection Framework이라고 한다. 
 : 데이터를 저장하는 방식에 따라 이미 필요한 객체나 interface를 만들어서
   풍부하게 제공을 한다. 사용자인 우리는 만들어 놓은 객체 또는 interface 를 가져다 사용하면
   데이터조작을 손쉽게 할수 있다.(ex) 등록, 수정, 삭제, 검색......) 
  : 제공된 메소드를 최대한 이용하여 작성하면 코딩은 간결하고 하는일 더 많이 할수 있다!!!
  : 객체만 저장가능하고 다양한 데이터타입 저장가능하다.
  : 자료구조 공간의 크기가 늘어난다!

박싱  - 기본형을 객체로 변환
- 언박싱  - 객체를 기본형을 변환

 : 제공되는 interface 

  1) List : 순서(index) 있고 중복이 가능하다.
             구현객체제공 - ArrayList, Vector, LinkedList,....  


  2) Set : 순서가 없다, 중복안됨.
             구현객체 - HashSet, 
                            TreeSet : element를 정렬해준다!!


  3) Map : key와 value의 한쌍으로 이루어지며
              key는 중복안되고 value는 중복가능하다 
              구현객체 - HashMap, Hashtable, TreeMap, Properties...



 * 자바는 primitiveType 8가지를 객체로 변환해주는 Wrapper클래스를 제공한다!!! - java.lang.*
   

*List 관련 메소드
  1. 추가
   ~.add(Object obj)

  2. 가져오기
    Object obj = ~.get(int index)

 3. 저장된 객체의 개수 
  int size = ~.size();

 4. 제거
     remove(int index); // index는 0부터 시작
     remove(Object obj);


