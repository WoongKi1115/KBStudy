- Array = 배열
   : 하나의 이름으로 방을 나눠서(index) 여러개의 값을 저장 할 수 있다.
   : 한가지 타입만 저장가능
   : 객체이다 (반드시 생성해서 사용한다.)
   : 배열의 길이는 배열이름. length
   : 배열의 index는 0부터 시작한다.

    * 배열 생성방법
       데이터타입 [ ] 배열이름 = new 데이터타입 [개수]; 
       데이터타입  배열이름 [ ] = new 데이터타입 [개수]; 
       데이터타입  배열이름 [ ] = new 데이터타입 [ ]{값, 값,값,....}; 
       데이터타입  배열이름 [ ] = {값, 값,값,....}; 

      ex) 정수형 5개 저장하는 배열
          int [ ] arr = new int [5]; 

      ex) 정수형 5개 저장하는 배열을 선언과 동시에 명시적 초기화
           int [] arr = new int []{2,4,6,8,10}; 
           int [] arr = {2,4,6,8,10}; 


* 배열에서 자주 발생하는 Exception (예외)
    : 컴파일은 성공하지만 실행도중에 발생한다. - RuntimeException의 종류
    1) ArrayIndexOutofBoundsException 

    2) NullPointerException
---------------------------------------------------------------
   Object 타입 배열 사용



---------------------------------------------------------------------------
  - 2차원 배열
   datatype 배열이름 [ ][ ] = new datatype [행][열];
   datatype [ ][ ] 배열이름  = new datatype [행][열];
   datatype [ ] 배열이름 [ ]   = new datatype [행][열];

  datatype 배열이름 [ ][ ] =new datatype [ ][ ]{ 
      {값, 값,...}, 
      {값, 값,...}, 
      ...
   };

  datatype 배열이름 [ ][ ] = { 
      {값, 값,...}, 
      {값, 값,...}, 
      ...
   };

  ex)
    int [][] arr = new int [3][5];

 ex) int [][] arr = new int [][] {
        {1 ,3, 5, 7 ,9},
        {2 ,4, 6, 8, 10},
        {10,20,30,40,50},
  };
=========================================
  * 가변형 2차원 배열
     : 각 행마다 열의 개수를 다르게 만들수 있다.(배열의 공간을 좀더 효율적으로 관리)

    - 선언방법
      데이터타입 [][] 배열이름 = new 데이터타입 [행][ ]; //행은 생략할수 없고 열은 비워둔다.
      * 각 행마다 열 생성 필수(1차원배열)

     ex) int [] [] arr =new int [3][ ];
          arr[0] = new int [5];
          arr[1] = new int [2];
          arr[2] = new int [3];


  ex) 2차원 가변형 배열을 선언과 동시에 명시적초기화
      int [][] arr = new int [][]{
          {1,3,5},
          {2,4,6,8,10},
          {1,2,3,4,5,6,7,8},
          {9,6},
    };

